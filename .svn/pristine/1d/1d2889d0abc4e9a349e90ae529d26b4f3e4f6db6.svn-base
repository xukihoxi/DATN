# -*- coding: utf-8 -*-
from odoo import api, fields, models, SUPERUSER_ID, _
from datetime import date, datetime, timedelta
from odoo.exceptions import UserError, ValidationError, MissingError
import json


class TherapyPrescription(models.Model):
    _inherit = 'therapy.prescription'

    activity_type_id = fields.Many2one('mail.activity.type', 'Activity Type')

    @api.model_cr
    def init(self):
        date_synchronize = self.env['ir.config_parameter'].search([('key', '=', 'Remind.Medicine')])
        if not date_synchronize:
            arr = {
                'date_deadline': 3,
                'activity_type_id': 2,
            }
            date_synchronize.set_param('Remind.Medicine', arr)

    def action_done(self):
        super(TherapyPrescription, self).action_done()
        if self.therapy_prescription_line_medicine_ids:
            arr = self.env['ir.config_parameter'].sudo().get_param('Remind.Medicine')
            arr_config = json.loads(arr.replace("'", "\""))
            #todo cập nhật ngày hết thuốc trên HSTL
            #lấy ra loại thuốc có số ngày ít nhất
            qty = 0
            for therapy_prescription_line_medicine_id in self.therapy_prescription_line_remain_ids:
                if therapy_prescription_line_medicine_id.product_id.x_is_medicine_day:
                    qty = therapy_prescription_line_medicine_id.qty
            if self.therapy_record_id.out_of_medicine_date:
                out_of_date = datetime.strptime(self.therapy_record_id.out_of_medicine_date, '%Y-%m-%d') + timedelta(days=qty)
            else:
                out_of_date = datetime.now() + timedelta(days=qty)
            self.therapy_record_id.out_of_medicine_date = out_of_date
            # ---
            reminds_created = self.env['activity.history'].search(
                [('therapy_record_id', '=', self.therapy_record_id.id), ('state', '!=', 'interacted'), ('type', '=', 'out_of_medicine')], limit=1)
            date_deadline = out_of_date - timedelta(days=arr_config['date_deadline'])
            if not reminds_created:
                remind = self.env['activity.history'].create({
                    'partner_id': self.partner_id.id,
                    'therapy_record_id': self.therapy_record_id.id,
                    'activity_type_id': arr_config['date_deadline'],
                    'type': 'out_of_medicine',
                    'object': 'consultant',
                    'user_id': self.partner_id.user_id.id,
                    'date_deadline': date_deadline,
                })
                remind.action_assign()
            else:
                reminds_created.date_deadline = date_deadline